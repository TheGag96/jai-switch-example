diff --git a/modules/Bindings_Generator/module.jai b/modules/Bindings_Generator/module.jai
index cb0e472..c06931e 100644
--- a/modules/Bindings_Generator/module.jai
+++ b/modules/Bindings_Generator/module.jai
@@ -145,6 +145,7 @@ RESERVED_NAMES :: string.[
     "cast",
     "context",
     "false",
+    "interface",
     "is_constant",
     "null",
     "remove",
@@ -155,6 +156,7 @@ RESERVED_NAMES :: string.[
     // Builtin types (as defined in the compilerâ€™s "get_primitive_type_declaration()" function):
     "Any",
     "bool",
+    "Code",
     "float",
     "float32",
     "float64",
diff --git a/modules/Default_Allocator/module.jai b/modules/Default_Allocator/module.jai
index 1ce3d86..30ab564 100644
--- a/modules/Default_Allocator/module.jai
+++ b/modules/Default_Allocator/module.jai
@@ -2047,7 +2047,7 @@
 
     #if OS == .WINDOWS {
         crt      :: #system_library "msvcrt";  // For malloc, free on Windows
-    } else #if (OS == .MACOS) || (OS == .LINUX) {
+    } else #if (OS == .MACOS) || (OS == .LINUX) || (OS == .NN_SWITCH) {
         crt      :: #system_library "libc";
     }
 }
diff --git a/modules/Runtime_Support.jai b/modules/Runtime_Support.jai
index f4e7cf9..f6d0b4d 100644
--- a/modules/Runtime_Support.jai
+++ b/modules/Runtime_Support.jai
@@ -271,7 +271,7 @@ write_string_unsynchronized :: (s: string, to_standard_error := false) #no_conte
         written: u32;
         handle := ifx to_standard_error then windows_standard_error else windows_standard_output;
         status := WriteFile(handle, s.data, cast(u32) s.count, *written, null);
-    } else #if OS_IS_UNIX {
+    } else #if OS_IS_UNIX || OS == .NN_SWITCH {
         STDOUT_FILENO : s32 : 1;
         STDERR_FILENO : s32 : 2;
         size_t  :: u64;  // So other people, globally, can use this, since it's a common thing. @Cleanup: Probably should be elsewhere?
@@ -632,6 +632,10 @@ set_initial_data :: (ts: *Temporary_Storage, count: s64, data: *u8) #no_context
     }
 
     write_string_mutex: _pthread_mutex_t;
+} else #if OS == .NN_SWITCH {
+    crt :: #system_library "libc";
+
+    write :: (fd: s32, buf: *void, count: u64) -> s64 #foreign crt;
 }
 
 synch_initted: s32 = 0;
